sc <- pHscale[i_flag_8]
st <- ST[i_flag_8]
ks  <- Ks[i_flag_8]
fluo <- FLUO[i_flag_8]
kff  <- Kff[i_flag_8]
# Where pHscale=="F", pHscale = free scale
i_sc_F <- which (sc == "F")
hfree[i_sc_F] <- h[i_sc_F]
htot[i_sc_F]  <- h[i_sc_F] / (1+st[i_sc_F]/ks[i_sc_F])
# Where pHscale=="T", pHscale = total scale
i_sc_T <- which (sc == "T")
hfree[i_sc_T] <- h[i_sc_T] * (1+st[i_sc_T]/ks[i_sc_T])
htot[i_sc_T]  <- h[i_sc_T]
# Where pHscale=="SWS", pHscale = SW scale
i_sc_S <- which (sc == "SWS")
hfree[i_sc_S] <- h[i_sc_S] * (1 + st[i_sc_S]/ks[i_sc_S] + fluo[i_sc_S]/kff[i_sc_S])
htot[i_sc_S]  <- hfree[i_sc_S] / (1+st[i_sc_S]/ks[i_sc_S])
# Calculate some invariable components of total alkalinity
boh4   <- BOR[i_flag_8] / (1+h/Kb[i_flag_8])
oh     <- Kw[i_flag_8]/h
temp   <- (h^3 + K1p[i_flag_8]*h^2 + K1p[i_flag_8]*K2p[i_flag_8]*h +
K1p[i_flag_8]*K2p[i_flag_8]*K3p[i_flag_8])
h3po4  <- Pt[i_flag_8]*h^3 / temp
hpo4   <- Pt[i_flag_8]*K1p[i_flag_8]*K2p[i_flag_8]*h / temp
po4    <- Pt[i_flag_8]*K1p[i_flag_8]*K2p[i_flag_8]*K3p[i_flag_8] / temp
siooh3 <- Sit[i_flag_8] / (1+h/Ksi[i_flag_8])
hso4   <- st/(1+ks/hfree)
hf     <- fluo / (1+Kf[i_flag_8]/htot)
# Sum of these components (partial alkalinity)
alk_p <- boh4+oh+hpo4+2*po4+siooh3-hfree-hso4-hf-h3po4
# As [HCO3-] and  [CO3--] are both linearly dependent on DIC
#    hco3  = co2*K1/h = DIC/(1+K1/h+K1*K2/(h^2)) * K1/h
#   2*co3  = 2*hco3*K2/h = DIC/(1+K1/h+K1*K2/(h^2)) * 2*K1*K2/h^2
# carbonate alk ([HCO3-] + 2*[CO3--]) is also linearly dependent on DIC
# Calculate DIC from carbonate alk (total alk - partial alk)
temp <- h*h + K1[i_flag_8]*h + K1[i_flag_8]*K2[i_flag_8]
DIC[i_flag_8] <- (ALK[i_flag_8]-alk_p) * temp /
(h*K1[i_flag_8] + 2*K1[i_flag_8]*K2[i_flag_8])
CO2[i_flag_8]  <- DIC[i_flag_8] /
(1 + K1[i_flag_8]/h + K1[i_flag_8]*K2[i_flag_8]/(h^2))
HCO3[i_flag_8] <- CO2[i_flag_8]*K1[i_flag_8]/h
CO3[i_flag_8]  <- HCO3[i_flag_8]*K2[i_flag_8]/h
fCO2[i_flag_8] <- CO2[i_flag_8]/K0[i_flag_8]
# ------------ case 9.) PH and DIC given
# Indices of flag elements where flag = 9
i_flag_9 <- which (flag == 9)
PH[i_flag_9]  <- var1[i_flag_9]
DIC[i_flag_9] <- var2[i_flag_9]
h <- 10^(-PH[i_flag_9])
H[i_flag_9] <- h
temp <- h*h + K1[i_flag_9]*h + K1[i_flag_9]*K2[i_flag_9]
HCO3[i_flag_9] <- (DIC[i_flag_9]*K1[i_flag_9]*h) / temp
CO3[i_flag_9]  <- (DIC[i_flag_9]*K1[i_flag_9]*K2[i_flag_9]) / temp
CO2[i_flag_9]  <- h*HCO3[i_flag_9]/K1[i_flag_9]
fCO2[i_flag_9] <- CO2[i_flag_9]/K0[i_flag_9]
# ------------ case 10.) HCO3 and CO3 given
# Indices of flag elements where flag = 10
i_flag_10 <- which (flag == 10)
HCO3[i_flag_10] <- var1[i_flag_10]
CO3[i_flag_10]  <- var2[i_flag_10]
h <- K2[i_flag_10]*HCO3[i_flag_10]/CO3[i_flag_10]
CO2[i_flag_10]  <- h*HCO3[i_flag_10]/K1[i_flag_10]
DIC[i_flag_10]  <- CO2[i_flag_10] + HCO3[i_flag_10] + CO3[i_flag_10]
fCO2[i_flag_10] <- CO2[i_flag_10]/K0[i_flag_10]
PH[i_flag_10] <- -log10(h)
H[i_flag_10] <- h
# ------------ case 11.) HCO3 and ALK given
# Indices of flag elements where flag = 11
i_flag_11 <- which (flag == 11)
HCO3[i_flag_11] <- var1[i_flag_11]
ALK[i_flag_11]  <- var2[i_flag_11]
fALK <- function(x)# K1=K1, K2=K2, HCO3=HCO3, BOR=BOR, Kb=Kb, Kw=Kw, Pt=Pt, K1p=K1p, K2p=K2p, K3p=K3p, Sit=Sit, Ksi=Ksi, ST=ST, Ks=Ks, FLUO=FLUO, Kf=Kf, ALK=ALK) {
{
# components for ALK
dic <- hco3*(x^2 + K1_i*x + K1_i*K2_i) / (K1_i*x)
co3 <- dic*K1_i*K2_i / (x*x + K1_i*x + K1_i*K2_i)
boh4 <- bor / (1+x/Kb_i)
oh <- Kw_i/x
h3po4 <- Pt_i*x^3 / (x^3 + K1p_i*x^2 + K1p_i*K2p_i*x + K1p_i*K2p_i*K3p_i)
hpo4 <- Pt_i*K1p_i*K2p_i*x/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
po4 <- Pt_i*K1p_i*K2p_i*K3p_i/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
siooh3 <- Sit_i/(1+x/Ksi_i)
## calculate Hfree and Htot
if(phs=="F")
{
hfree <- x  ## if pHscale = free scale
htot <- x / (1+st/Ks_i)
}
else if(phs=="T")
{
hfree <- x * (1+st/Ks_i)
htot <- x
}
else if(phs=="SWS")
{
hfree <- x * (1 + st/Ks_i + fluo/Kff_i)
htot <- hfree / (1+st/Ks_i)
}
hso4 <- st/(1+Ks_i/hfree)
hf <- fluo/(1+Kf_i/htot)
############
OUT <- hco3+2*co3+boh4+oh+hpo4+2*po4+siooh3-hfree-hso4-hf-h3po4-alk
OUT
}
# Calculate [H+] from [HCO3] and total alk
h <- rep(NA, length(i_flag_11))
j <- 1
for(i in (i_flag_11))
{
# Parameters used by function fAlk defined above and called below through uniroot()
K1_i <- K1[i]
K2_i <- K2[i]
K1p_i <- K1p[i]
K2p_i <- K2p[i]
K3p_i <- K3p[i]
Kb_i  <- Kb[i]
Kw_i  <- Kw[i]
Ksi_i <- Ksi[i]
Ks_i  <- Ks[i]
Kf_i  <- Kf[i]
Kff_i <- Kff[i]
Sit_i <- Sit[i]
Pt_i  <- Pt[i]
hco3  <- HCO3[i]
alk   <- ALK[i]
st    <- ST[i]
bor   <- BOR[i]
fluo  <- FLUO[i]
phs   <- pHscale[i]
# Calculate [H+] from total alk
h[j] <- uniroot(fALK,c(10^(-9.5),10^(-3)), tol=1e-20)$root
j <- j + 1
}
CO2[i_flag_11] <- h*HCO3[i_flag_11]/K1[i_flag_11]
CO3[i_flag_11] <- K2[i_flag_11]*HCO3[i_flag_11]/h
DIC[i_flag_11] <- CO2[i_flag_11] + HCO3[i_flag_11] + CO3[i_flag_11]
PH[i_flag_11] <- -log10(h)
H[i_flag_11] <- h
fCO2[i_flag_11] <- CO2[i_flag_11]/K0[i_flag_11]
# ------------ case 12.) HCO3 and DIC given
# Indices of flag elements where flag = 12
i_flag_12 <- which (flag == 12)
HCO3[i_flag_12] <- var1[i_flag_12]
DIC[i_flag_12]  <- var2[i_flag_12]
a <- HCO3[i_flag_12]
b <- K1[i_flag_12]*(HCO3[i_flag_12]-DIC[i_flag_12])
c <- K1[i_flag_12]*K2[i_flag_12]*HCO3[i_flag_12]
D <- b*b - 4*a*c
h <- (-b-sqrt(D))/(2*a)
CO2[i_flag_12]  <- h*HCO3[i_flag_12]/K1[i_flag_12]
CO3[i_flag_12]  <- K2[i_flag_12]*HCO3[i_flag_12]/h
fCO2[i_flag_12] <- CO2[i_flag_12]/K0[i_flag_12]
PH[i_flag_12] <- -log10(h)
H[i_flag_12] <- h
# ------------ case 13.) CO3 and ALK given
# Indices of flag elements where flag = 13
i_flag_13 <- which (flag == 13)
CO3[i_flag_13] <- var1[i_flag_13]
ALK[i_flag_13] <- var2[i_flag_13]
fALK <- function(x)# K1=K1, K2=K2, HCO3=HCO3, BOR=BOR, Kb=Kb, Kw=Kw, Pt=Pt, K1p=K1p, K2p=K2p, K3p=K3p, Sit=Sit, Ksi=Ksi, ST=ST, Ks=Ks, FLUO=FLUO, Kf=Kf, ALK=ALK) {
{
# composants for ALK
dic <- co3*(x^2 + K1_i*x + K1_i*K2_i)/(K1_i*K2_i)
hco3 <- dic*K1_i*x/(x*x + K1_i*x + K1_i*K2_i)
boh4 <- bor/(1+x/Kb_i)
oh <- Kw_i/x
h3po4 <- Pt_i*x^3 / (x^3 + K1p_i*x^2 + K1p_i*K2p_i*x + K1p_i*K2p_i*K3p_i)
hpo4 <- Pt_i*K1p_i*K2p_i*x/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
po4 <- Pt_i*K1p_i*K2p_i*K3p_i/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
siooh3 <- Sit_i/(1+x/Ksi_i)
## calculate Hfree and Htot
if(phs=="F")
{
hfree <- x  ## if pHscale = free scale
htot <- x / (1+st/Ks_i)
}
else if(phs=="T")
{
hfree <- x * (1+st/Ks_i)
htot <- x
}
else if(phs=="SWS")
{
hfree <- x * (1 + st/Ks_i + fluo/Kff_i)
htot <- hfree / (1+st/Ks_i)
}
hso4 <- st/(1+Ks_i/hfree)
hf <- fluo/(1+Kf_i/htot)
############
OUT <- hco3+2*co3+boh4+oh+hpo4+2*po4+siooh3-hfree-hso4-hf-h3po4-alk
OUT
}
# Calculate [H+] from [CO3] and total alk
h <- rep(NA, length(i_flag_13))
j <- 1
for(i in (i_flag_13))
{
# Parameters used by function fAlk defined above and called below through uniroot()
K1_i <- K1[i]
K2_i <- K2[i]
K1p_i <- K1p[i]
K2p_i <- K2p[i]
K3p_i <- K3p[i]
Kb_i  <- Kb[i]
Kw_i  <- Kw[i]
Ksi_i <- Ksi[i]
Ks_i  <- Ks[i]
Kf_i  <- Kf[i]
Kff_i <- Kff[i]
Sit_i <- Sit[i]
Pt_i  <- Pt[i]
co3   <- CO3[i]
alk   <- ALK[i]
st    <- ST[i]
bor   <- BOR[i]
fluo  <- FLUO[i]
phs   <- pHscale[i]
# Calculate [H+] from total alk
h[j] <- uniroot(fALK,c(10^(-9.5),10^(-3.5)), tol=1e-20)$root
j <- j + 1
}
HCO3[i_flag_13] <- h*CO3[i_flag_13]/K2[i_flag_13]
CO2[i_flag_13]  <- h*HCO3[i_flag_13]/K1[i_flag_13]
fCO2[i_flag_13] <- CO2[i_flag_13]/K0[i_flag_13]
DIC[i_flag_13]  <- HCO3[i_flag_13] + CO2[i_flag_13] + CO3[i_flag_13]
PH[i_flag_13] <- -log10(h)
H[i_flag_13] <- h
# ------------ case 14.) CO3 and DIC given
# Indices of flag elements where flag = 14
i_flag_14 <- which (flag == 14)
CO3[i_flag_14] <- var1[i_flag_14]
DIC[i_flag_14] <- var2[i_flag_14]
a <- CO3[i_flag_14]
b <- K1[i_flag_14]*CO3[i_flag_14]
c <- K1[i_flag_14] * K2[i_flag_14] * (CO3[i_flag_14]-DIC[i_flag_14])
D <- b*b - 4*a*c
h <- (-b+sqrt(D))/(2*a)
HCO3[i_flag_14] <- h*CO3[i_flag_14]/K2[i_flag_14]
CO2[i_flag_14]  <- h*HCO3[i_flag_14]/K1[i_flag_14]
fCO2[i_flag_14] <- CO2[i_flag_14]/K0[i_flag_14]
PH[i_flag_14] <- -log10(h)
H[i_flag_14] <- h
# ------------ case 15.) ALK and DIC given
# Indices of flag elements where flag = 15
i_flag_15 <- which (flag == 15)
ALK[i_flag_15] <- var1[i_flag_15]
DIC[i_flag_15] <- var2[i_flag_15]
fALK <- function(x) # K1=K1, K2=K2, DIC=DIC, BOR=BOR, Kb=Kb, Kw=Kw, Pt=Pt, K1p=K1p, K2p=K2p, K3p=K3p, Sit=Sit, Ksi=Ksi, ST=ST, Ks=Ks, FLUO=FLUO, Kf=Kf, ALK=ALK) {
{
# composants for ALK
hco3 <- dic*x*K1_i/(x*x + K1_i*x + K1_i*K2_i)
co3 <- dic*K1_i*K2_i/(x*x + K1_i*x + K1_i*K2_i)
boh4 <- bor/(1+x/Kb_i)
oh <- Kw_i/x
h3po4 <- Pt_i*x^3 / (x^3 + K1p_i*x^2 + K1p_i*K2p_i*x + K1p_i*K2p_i*K3p_i)
hpo4 <- Pt_i*K1p_i*K2p_i*x/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
po4 <- Pt_i*K1p_i*K2p_i*K3p_i/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
siooh3 <- Sit_i/(1+x/Ksi_i)
## calculate Hfree and Htot
if(phs=="F")
{
hfree <- x  ## if pHscale = free scale
htot <- x / (1+st/Ks_i)
}
else if(phs=="T")
{
hfree <- x * (1+st/Ks_i)
htot <- x
}
else if(phs=="SWS")
{
hfree <- x * (1 + st/Ks_i + fluo/Kff_i)
htot <- hfree / (1+st/Ks_i)
}
hso4 <- st/(1+Ks_i/hfree)
hf <- fluo/(1+Kf_i/htot)
############
OUT <- hco3+2*co3+boh4+oh+hpo4+2*po4+siooh3-hfree-hso4-hf-h3po4-alk
OUT
}
# Calculate [H+] from DIC and total alk
h <- rep(NA, length(i_flag_15))
j <- 1
for(i in (i_flag_15))
{
# Parameters used by function fAlk defined above and called below through uniroot()
K1_i <- K1[i]
K2_i <- K2[i]
K1p_i <- K1p[i]
K2p_i <- K2p[i]
K3p_i <- K3p[i]
Kb_i  <- Kb[i]
Kw_i  <- Kw[i]
Ksi_i <- Ksi[i]
Ks_i  <- Ks[i]
Kf_i  <- Kf[i]
Kff_i <- Kff[i]
Sit_i <- Sit[i]
Pt_i  <- Pt[i]
dic   <- DIC[i]
alk   <- ALK[i]
st    <- ST[i]
bor   <- BOR[i]
fluo  <- FLUO[i]
phs   <- pHscale[i]
# Calculate [H+] from total alk
h[j] <- uniroot(fALK,c(1e-10,10^(-3.5)), tol=1e-30)$root
j <- j + 1
}
temp <- h*h + K1[i_flag_15]*h + K1[i_flag_15]*K2[i_flag_15]
HCO3[i_flag_15] <- (DIC[i_flag_15]*K1[i_flag_15]*h) / temp
CO3[i_flag_15]  <- (DIC[i_flag_15]*K1[i_flag_15]*K2[i_flag_15]) / temp
CO2[i_flag_15]  <- h*HCO3[i_flag_15]/K1[i_flag_15]
fCO2[i_flag_15] <- CO2[i_flag_15]/K0[i_flag_15]
PH[i_flag_15] <- -log10(h)
H[i_flag_15] <- h
# ------------ calculation of pCO2 for cases 1 to 15
# here P = Patm = 1 bar
# Indices of flag elements where 1 <= flag <= 15
i_flag <- which (flag >= 1 & flag <= 15)
tk <- TK[i_flag]
B  <- (-1636.75+12.0408*tk-0.0327957*(tk*tk)+0.0000316528*(tk*tk*tk))*1e-6;
pCO2[i_flag] <- fCO2[i_flag] * exp(-(1*100000)*(B+2*(57.7-0.118*tk)*1e-6)/(8.314*tk))
# ------------ calculation of fCO2 for cases 21 to 25
# here P = Patm = 1 bar
# Indices of flag elements where 21 <= flag <= 25
i_flag <- which (flag >= 21 & flag <= 25)
pCO2[i_flag] <- var1[i_flag] * 1e-6
tk <- TK[i_flag]
B <- (-1636.75+12.0408*tk-0.0327957*(tk*tk)+0.0000316528*(tk*tk*tk))*1e-6;
fCO2[i_flag] <- pCO2[i_flag] * exp((1*100000)*(B+2*(57.7-0.118*tk)*1e-6)/(8.314*tk))
# ------------ case 21.) PH and pCO2 given
# Indices of flag elements where flag = 21
i_flag_21 <- which (flag == 21)
PH[i_flag_21] <- var2[i_flag_21]
h <- 10^(-PH[i_flag_21])
H[i_flag_21] <- h
CO2[i_flag_21]  <- K0[i_flag_21]*fCO2[i_flag_21]
HCO3[i_flag_21] <- K1[i_flag_21]*CO2[i_flag_21]/h
CO3[i_flag_21]  <- K2[i_flag_21]*HCO3[i_flag_21]/h
DIC[i_flag_21]  <- CO2[i_flag_21] + HCO3[i_flag_21] + CO3[i_flag_21]
# ------------ case 22.) HCO3 and pCO2 given
# Indices of flag elements where flag = 22
i_flag_22 <- which (flag == 22)
HCO3[i_flag_22] <- var2[i_flag_22]
CO2[i_flag_22]  <- fCO2[i_flag_22]*K0[i_flag_22]
h <- CO2[i_flag_22]*K1[i_flag_22]/HCO3[i_flag_22]
CO3[i_flag_22]  <- HCO3[i_flag_22]*K2[i_flag_22]/h
DIC[i_flag_22]  <- CO2[i_flag_22] + HCO3[i_flag_22] + CO3[i_flag_22]
PH[i_flag_22] <- -log10(h)
H[i_flag_22] <- h
# ------------ case 23.) CO3 and pCO2 given
# Indices of flag elements where flag = 23
i_flag_23 <- which (flag == 23)
CO3[i_flag_23] <- var2[i_flag_23]
h <- sqrt(K0[i_flag_23]*K1[i_flag_23]*K2[i_flag_23]*fCO2[i_flag_23]/CO3[i_flag_23])
HCO3[i_flag_23] <- h*CO3[i_flag_23]/K2[i_flag_23]
CO2[i_flag_23]  <- h*HCO3[i_flag_23]/K1[i_flag_23]
DIC[i_flag_23] <- CO2[i_flag_23] + HCO3[i_flag_23] + CO3[i_flag_23]
PH[i_flag_23] <- -log10(h)
H[i_flag_23] <- h
# ------------ case 24.) ALK and pCO2 given
# Indices of flag elements where flag = 24
i_flag_24 <- which (flag == 24)
ALK[i_flag_24] <- var2[i_flag_24]
CO2[i_flag_24] <- fCO2[i_flag_24]*K0[i_flag_24]
# From this line on, this case is similar to case 4
fALK <- function(x)# K1=K1, K2=K2, CO2=CO2, BOR=BOR, Kb=Kb, Kw=Kw, Pt=Pt, K1p=K1p, K2p=K2p, K3p=K3p, Sit=Sit, Ksi=Ksi, ST=ST, Ks=Ks, FLUO=FLUO, Kf=Kf, ALK=ALK)
{
# components for ALK
dic <- co2*(1+K1_i/x+K1_i*K2_i/(x*x))
hco3 <- dic*x*K1_i/(x*x + K1_i*x + K1_i*K2_i)
co3 <- dic*K1_i*K2_i/(x*x + K1_i*x + K1_i*K2_i)
boh4 <- bor/(1+x/Kb_i)
oh <- Kw_i/x
h3po4 <- Pt_i*x^3/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
hpo4 <- Pt_i*K1p_i*K2p_i*x/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
po4 <- Pt_i*K1p_i*K2p_i*K3p_i/(x^3+K1p_i*x^2+K1p_i*K2p_i*x+K1p_i*K2p_i*K3p_i)
siooh3 <- Sit_i/(1+x/Ksi_i)
## calculate Hfree and Htot
if(phs=="F")
{
hfree <- x  ## if pHscale = free scale
htot <- x / (1+st/Ks_i)
}
else if(phs=="T")
{
hfree <- x * (1+st/Ks_i)
htot <- x
}
else if(phs=="SWS")
{
hfree <- x * (1 + st/Ks_i + fluo/Kff_i)
htot <- hfree / (1+st/Ks_i)
}
hso4 <- st/(1+Ks_i/hfree)
hf <- fluo/(1+Kf_i/htot)
############
OUT <- hco3+2*co3+boh4+oh+hpo4+2*po4+siooh3-hfree-hso4-hf-h3po4-alk
OUT
}
# Calculate [H+] from [CO2] and total alk
h <- rep(NA, length(i_flag_24))
j <- 1
for(i in (i_flag_24))
{
# Parameters used by function fAlk defined above and called below through uniroot()
K1_i <- K1[i]
K2_i <- K2[i]
K1p_i <- K1p[i]
K2p_i <- K2p[i]
K3p_i <- K3p[i]
Kb_i  <- Kb[i]
Kw_i  <- Kw[i]
Ksi_i <- Ksi[i]
Ks_i  <- Ks[i]
Kf_i  <- Kf[i]
Kff_i <- Kff[i]
Sit_i <- Sit[i]
Pt_i  <- Pt[i]
co2   <- CO2[i]
alk   <- ALK[i]
st    <- ST[i]
bor   <- BOR[i]
fluo  <- FLUO[i]
phs   <- pHscale[i]
# Calculate [H+] from total alk
h[j] <- uniroot(fALK,c(1e-10,10^(-3.5)), tol=1e-20)$root
j <- j + 1
}
HCO3[i_flag_24] <- K1[i_flag_24]*CO2[i_flag_24]/h
CO3[i_flag_24]  <- K2[i_flag_24]*HCO3[i_flag_24]/h
PH[i_flag_24]   <- -log10(h)
H[i_flag_24] <- h
DIC[i_flag_24]  <- CO2[i_flag_24] + HCO3[i_flag_24] + CO3[i_flag_24]
# ------------ case 25.) DIC and pCO2 given
# Indices of flag elements where flag = 25
i_flag_25 <- which (flag == 25)
DIC[i_flag_25] <- var2[i_flag_25]
CO2[i_flag_25] <- K0[i_flag_25]*fCO2[i_flag_25]
# Though case 25 is the same as case 5, computations are made in a different way
K <- K1[i_flag_25]/K2[i_flag_25]
b <- K*K0[i_flag_25]*fCO2[i_flag_25]
c <- (K*K0[i_flag_25]*fCO2[i_flag_25]) *
(K0[i_flag_25]*fCO2[i_flag_25]-DIC[i_flag_25])
D <- b*b - 4*c
HCO3[i_flag_25] <- (1/2)*(-b + sqrt(D))
CO3[i_flag_25]  <- DIC[i_flag_25] - CO2[i_flag_25] - HCO3[i_flag_25]
h <- K1[i_flag_25]*CO2[i_flag_25]/HCO3[i_flag_25]
PH[i_flag_25] <- -log10(h)
H[i_flag_25] <- h
# ------------ CALCULATION OF ALK in cases
cases <- c(1, 2, 3, 5, 6, 7, 9, 10, 12, 14, 21, 22, 23, 25)
# Indices of flag elements in these cases
i_flag <- which (flag %in% cases)
h <- H[i_flag]
# HCO3[i_flag] <- DIC[i_flag]*h*K1[i_flag]/(h*h + K1[i_flag]*h + K1[i_flag]*K2[i_flag])
# CO3[i_flag]  <- HCO3[i_flag] * K2[i_flag] / h
boh4 <- BOR[i_flag]/(1+h/Kb[i_flag])
oh <- Kw[i_flag]/h
temp <- h^3 + K1p[i_flag]*h^2 + K1p[i_flag]*K2p[i_flag]*h + K1p[i_flag]*K2p[i_flag]*K3p[i_flag]
h3po4 <- Pt[i_flag]*(h^3) / temp
hpo4  <- Pt[i_flag]*K1p[i_flag]*K2p[i_flag]*h / temp
po4   <- Pt[i_flag]*K1p[i_flag]*K2p[i_flag]*K3p[i_flag] / temp
siooh3 <- Sit[i_flag]/(1+h/Ksi[i_flag])
## calculate Hfree anf Htot
hfree <- rep(NA, length(i_flag))
htot  <- rep(NA, length(i_flag))
sc <- pHscale[i_flag]
st <- ST[i_flag]
ks  <- Ks[i_flag]
fluo <- FLUO[i_flag]
kff  <- Kff[i_flag]
# Where pHscale=="F", pHscale = free scale
i_sc_F <- which (sc == "F")
hfree[i_sc_F] <- h[i_sc_F]
htot[i_sc_F]  <- h[i_sc_F] / (1+st[i_sc_F]/ks[i_sc_F])
# Where pHscale=="T", pHscale = total scale
i_sc_T <- which (sc == "T")
hfree[i_sc_T] <- h[i_sc_T] * (1+st[i_sc_T]/ks[i_sc_T])
htot[i_sc_T]  <- h[i_sc_T]
# Where pHscale=="SWS", pHscale = SW scale
i_sc_S <- which (sc == "SWS")
hfree[i_sc_S] <- h[i_sc_S] * (1 + st[i_sc_S]/ks[i_sc_S] + fluo[i_sc_S]/kff[i_sc_S])
htot[i_sc_S]  <- hfree[i_sc_S] / (1+st[i_sc_S]/ks[i_sc_S])
hso4 <- st/(1+ks/hfree)
hf   <- fluo/(1+Kf[i_flag]/htot)
ALK[i_flag]  <- HCO3[i_flag] + 2*CO3[i_flag] + boh4+oh+hpo4+2*po4+siooh3-hfree-hso4-hf-h3po4
##########################################################
# CALCULATION OF ARAGONITE AND CALCITE SATURATION STATE  #
##########################################################
Oa  <- ((0.01028*(S/35))*CO3)/Kspa
Oc  <- ((0.01028*(S/35))*CO3)/Kspc
#PCO2 and fCO2 converted in microatmosphere
pCO2 <- pCO2*1e6
fCO2 <- fCO2*1e6
RES <- data.frame(flag,S,T,P,PH,CO2,pCO2,fCO2,HCO3,CO3,DIC,ALK,Oa,Oc)
names(RES) <- c("flag", "S", "T", "P", "pH", "CO2", "pCO2", "fCO2", "HCO3", "CO3", "DIC", "ALK", "OmegaAragonite", "OmegaCalcite")
return(RES)
}
carb(flag=24, var1=pCO2, var2=ALK, S=S, T=T, P=0, Pt=0, Sit=0, pHscale="T", kf="pf", k1k2="l", ks="d", b="l10")
install.packages(c("caTools", "cluster", "codetools", "formatR", "htmltools", "KernSmooth", "labeling", "Lahman", "markdown", "MASS", "mgcv", "mime", "RJSONIO", "shiny", "xtable"))
install.packages("~/Documents/R-forge/seacarb_folder/seacarb_3.0.tar.gz", repos = NULL, type = "source")
carb(flag=24, var1=pCO2, var2=ALK, S=S, T=T, P=0, Pt=0, Sit=0, pHscale="T", kf="pf", k1k2="l", ks="d", b="l10")
?vapress
examples(carb)
example(carb)
?carb
library(seacarb)
?carb
library(seacarb)
?x2pCO2
